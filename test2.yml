---
- name: Collect data from SVM1 on host ABC
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    source_host: "192.168.0.101"
    source_vserver: "svm1_cluster1"
    username: "admin"
    password: "Netapp1!"
  tasks:
    - name: Create authentication header
      set_fact:
        auth_header: "Basic {{ (username + ':' + password) | b64encode }}"

    - name: Get all volumes replicating from SVM1 to SVM2
      uri:
        url: "https://{{ source_host }}/api/storage/volumes?svm.name={{ source_vserver }}"
        method: GET
        headers:
          Authorization: "{{ auth_header }}"
          Content-Type: "application/json"
        validate_certs: false
      register: volumes

    - name: Get snapmirror list destination from SVM1
      uri:
        url: "https://{{ source_host }}/api/snapmirror/relationships?source.svm.name={{ source_vserver }}"
        method: GET
        headers:
          Authorization: "{{ auth_header }}"
          Content-Type: "application/json"
        validate_certs: false
      register: snapmirror_list

    - name: Get export policy names from SVM1
      uri:
        url: "https://{{ source_host }}/api/protocols/nfs/export-policies?svm.name={{ source_vserver }}"
        method: GET
        headers:
          Authorization: "{{ auth_header }}"
          Content-Type: "application/json"
        validate_certs: false
      register: export_policies

    - name: Get export policy rule details from SVM1
      uri:
        url: "https://{{ source_host }}/api/protocols/nfs/export-policies/{{ item.id }}"
        method: GET
        headers:
          Authorization: "{{ auth_header }}"
          Content-Type: "application/json"
        validate_certs: false
      register: export_policy_rules
      loop: "{{ export_policies.json.records }}"
      loop_control:
        loop_var: item

    - name: Get CIFS shares from SVM1
      uri:
        url: "https://{{ source_host }}/api/protocols/cifs/shares?svm.name={{ source_vserver }}"
        method: GET
        headers:
          Authorization: "{{ auth_header }}"
          Content-Type: "application/json"
        validate_certs: false
      register: cifs_shares

    - name: Save collected data
      copy:
        content: |
          volumes: {{ volumes.json }}
          snapmirror_list: {{ snapmirror_list.json }}
          export_policies: {{ export_policies.json }}
          export_policy_rules: {{ export_policy_rules.results | default([]) }}
          cifs_shares: {{ cifs_shares.json }}
        dest: collected_data.yml
